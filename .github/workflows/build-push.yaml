name: Docker CI
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - "*"
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DEPLOYMENT: ai-playground
jobs:
  image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
      packages: write
      attestations: write
    defaults:
      run:
        working-directory: "."
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main
      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    runs-on: ubuntu-latest
    needs: image
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Set up Kubectl
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - name: Deploy
        run: kubectl rollout restart deployment ${{ env.DEPLOYMENT }}
      - name: Send Job Status to Slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          update-ts: ${{ steps.slack.outputs.ts }}
          payload: |
            {
              "text": "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}",
              "attachments": [
                {
                  "pretext": "Deployed",
                  "color": "dbab09"
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
